{"react":{"scope":"typescriptreact","prefix":["react-component"],"description":"Creates a quick general React component","category":"React","body":["  import React from \"react\";","","  /**","   * Interface for ${1:Component} props","   */","  export interface ${1:Component}Props {","    children?: any;","  };","","  /**","   *  A ${1:Component} component.","   */","  const ${1:Component}: React.FC<${1:Component}Props> = (props) => {","    return <div>${1:Component} component</div>","  }","","  export default ${1:Component}",""]},"useEffect":{"scope":"typescriptreact","prefix":["useEffect"],"description":"Creates a useEffect snippet in browser","category":"React","body":["  React.useEffect(() => {","    ","  }, []);",""]},"typescript-class":{"scope":"typescript","prefix":["class","typescript-class"],"description":"Creates a quick typescript class","category":"Typescript","body":["  /**","   *  A ${1:Component}.","   */","","  export default class ${1:Component} {","    ","  }",""]},"react-emotion":{"scope":"typescriptreact","prefix":["react-emotion-component"],"description":"Creates a quick emotion component","category":"React","body":["  /** @jsxImportSource @emotion/react */","  import { css } from \"@emotion/react\";","  import React from \"react\";","","  /**","   * Interface for ${1:Component} props","   */","  export interface ${1:Component}Props {","    children?: any;","  }","","  /**","   *  A ${1:Component} component.","   */","  const ${1:Component}: React.FC<${1:Component}Props> = (props) => {","    return <div css={css``}>${1:Component} component</div>","  }","","  export default ${1:Component}",""]},"sass-background":{"prefix":["svg-background"],"description":"Creates an svg background image in sass/css","category":"SASS","body":["  mask: url(${1:path}) no-repeat 0 0/contain;","  -webkit-mask: url(${1:path}) no-repeat 0 0/contain;","  background-image: unset;","  background-color: ${2:color};","  background-repeat: no-repeat;","  background-size: contain;","  will-change: mask,-webkit-mask;",""]},"sass-media":{"prefix":["media"],"description":"Creates a media query","category":"SASS","body":["  @media screen and (max-width: ${1:width}px) {","    ","  }",""]},"svg-background":{"prefix":["svg-background"],"description":"Creates an svg background image in sass/css","category":"SASS","body":["  mask: url(${1:path}) no-repeat 0 0/contain;","  -webkit-mask: url(${1:path}) no-repeat 0 0/contain;","  background-image: unset;","  background-color: currentColor;","  background-repeat: no-repeat;","  background-size: contain;","  will-change: mask,-webkit-mask;",""]},"sass-skeleton":{"prefix":["skeleton","spooky-scary-skeletons"],"description":"Creates a CSS/SASS skeleton","category":"SASS","body":["  background-color: gray;","  width: ${1:width};","  height: ${2:height};","  border-radius: ${3:border-radius};","","  background-color: #ccc;","  overflow: hidden;","","  &::after { // TODO: make this a mixin","    animation: load 0.8s infinite;","    will-change: transform;","    content: \"\";","    width: 100%;","    height: 100%;","    background-color: white;","    opacity: 0.2;","    display: block;","  }",""]},"webpack":{"prefix":["react-webpack"],"description":"A webpack starter for node importing projects","category":"Webpack","url":"https://gist.githubusercontent.com/Robbie-Cook/96be95a2c459844e811bcd2208bb053e/raw/1b136fc3e1aa8bc68bb8e77e95b6b7ccaf624bee/webpack.config.js","body":["const nodeExternals = require(\"webpack-node-externals\");","const path = require(\"path\");","","module.exports = {","  entry: path.resolve(__dirname, \"./src/index.ts\"),","  output: {","    path: path.resolve(__dirname, \"./dist\"),","    filename: \"index.js\",","  },","","  mode: \"production\",","  target: \"web\",","","  // Enable sourcemaps for debugging webpack's output.","  devtool: \"source-map\",","","  resolve: {","    // Add '.ts' and '.tsx' as resolvable extensions.","    extensions: [\".ts\", \".tsx\", \".js\", \".jsx\"],","  },","","  module: {","    rules: [","      {","        test: /(\\.ts(x?))|(\\.jsx?)$/,","        exclude: /node_modules/,","        use: [","          {","            loader: \"ts-loader\",","            options: {","              configFile: path.resolve(__dirname, \"tsconfig.json\"),","            },","          },","        ],","      },","      // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.","      {","        enforce: \"pre\",","        test: /\\.js$/,","        exclude: /node_modules/,","        loader: \"source-map-loader\",","      },","      {","        test: /\\.scss$/,","        exclude: /node_modules/,","        use: [","          // Use the chain sass-loader -> css-loader -> style-loader","          // But use MiniCssExtractPlugin on prod, so we get a file.","          {","            loader: \"style-loader\",","          },","          {","            loader: \"css-loader\",","          },","          {","            loader: \"sass-loader\",","          },","        ],","      },","    ],","  },","","  // externals: {","  //   'react': 'react', // Case matters here","  //   'react-dom' : 'react-dom' // Case matters here","  // },","  externals: [nodeExternals()],","  plugins: [],","};",""]},"webpack-umd":{"prefix":["webpack-umd","react-webpack-umd"],"description":"A webpack starter compiling to UMD","category":"Webpack","url":"https://gist.githubusercontent.com/Robbie-Cook/30cc6359e72c899d73debe717e905e30/raw/12f1567aed466b45b30894b39e1d9cae2a4ae2a9/webpack-umd.config.js","body":["const path = require(\"path\");","","module.exports = {","  entry: path.resolve(__dirname, \"./src/index.ts\"),","  output: {","    path: path.resolve(__dirname, \"./umd\"),","    filename: \"index.js\",","    libraryTarget: \"umd\",","    library: \"MyPackageName\",","  },","","  mode: \"production\",","  target: \"web\",","","  // Enable sourcemaps for debugging webpack's output.","  devtool: \"source-map\",","","  resolve: {","    // Add '.ts' and '.tsx' as resolvable extensions.","    extensions: [\".ts\", \".tsx\", \".js\", \".jsx\"],","  },","","  module: {","    rules: [","      {","        test: /(\\.ts(x?))|(\\.jsx?)$/,","        exclude: /node_modules/,","        use: [","          {","            loader: \"ts-loader\",","            options: {","              configFile: path.resolve(__dirname, \"tsconfig.json\"),","            },","          },","        ],","      },","      // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.","      {","        enforce: \"pre\",","        test: /\\.js$/,","        exclude: /node_modules/,","        loader: \"source-map-loader\",","      },","      {","        test: /\\.scss$/,","        exclude: /node_modules/,","        use: [","          // Use the chain sass-loader -> css-loader -> style-loader","          // But use MiniCssExtractPlugin on prod, so we get a file.","          {","            loader: \"style-loader\",","          },","          {","            loader: \"css-loader\",","          },","          {","            loader: \"sass-loader\",","          },","        ],","      },","    ],","  },","  plugins: [],","};"]},"Promise":{"prefix":["promise"],"description":"A new ES6 promise","category":"Typescript","scope":["typescript","typescriptreact"],"body":["  new Promise<${1:type}>((resolve, reject) => {","  });",""]}}